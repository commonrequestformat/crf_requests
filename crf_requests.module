<?php
/**
 * @file
 * Code for the CRF Requests feature.
 */

include_once 'crf_requests.features.inc';


/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function crf_requests_form_node_form_alter(&$form, &$form_state, $form_id) {
  $node = $form['#node'];
  if (workbench_moderation_node_type_moderated($node->type)) {
  
    // Move publishing options up on node edit forms.
    $form['options']['#weight'] = -100;

    if (!isset($node->nid)) {
      $form['actions']['submit']['#prefix'] = '<div>' . t('Make sure you selected the "Current: Draft" moderation state in the "Publishing options" section above.') . '</div>';
    }
    else {
      $content_type = node_type_load($node->type);
      $form['actions']['submit']['#prefix'] = '<div>' . t('Select the "Submit to OCHA" moderation state in the "Publishing options" section above to submit this @content_type to OCHA.', array('@content_type' => $content_type->name)) . '</div>';
    }
  }
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function crf_requests_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  switch($form['#id']) {
    case 'views-exposed-form-requests-page':
      $form['nid'] = crf_requests_convert_form_textfield('node', 'request');
      $form['field_reporting_type_target_id'] = crf_requests_convert_form_textfield('taxonomy_term', 'reporting_types');      
      break;
    case 'views-exposed-form-request-content-cluster-request-content':
      $form['nid'] = crf_requests_convert_form_textfield('node', 'crf_request');
      break;
  }
}


/**
 * Implements hook_block_info().
 */
function crf_requests_block_info() {
  $blocks['legend'] = array(
    'info' => t('Legend'),
  );
/*
  $blocks['create_request'] = array(
    'info' => t('Create Request'),
  );
*/
  $blocks['administrator'] = array(
    'info' => t('Administrator'),
  );
  $blocks['view_data'] = array(
    'info' => t('View Data'),
  );
  $blocks['tools'] = array(
    'info' => t('Tools'),
  );
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function crf_requests_block_view($delta = '') {  
  $block = array();

  switch ($delta) {
    case 'legend':
      $legend_vars = array(
        'path' => path_to_theme() . '/images/crf_request/request-legend.png',
        'alt' => 'Legend',
        'title' => 'Legend',
        'width' => '172',
        'height' => '254',
        'attributes' => array('class' => 'request-legend'),
      );
    
      $block['subject'] = t('Legend');
      $block['content'] = theme('image', $legend_vars);
      break;
/*
    case 'create_request':
      $block['subject'] = t('Create Request');
      $block['content'] = drupal_get_form('crf_requests_create_form');
      break;
*/
    case 'administrator':
      $block['subject'] = t('Administrator');
      $block['content'] = drupal_get_form('crf_requests_admin_form');
      break;
    case 'view_data':
      $block['subject'] = t('View Data');
      $block['content'] = drupal_get_form('crf_requests_view_data_form');
      break;
    case 'tools':
      $items = array();
      if ($node = menu_get_object()) {
        $items[] = l('Print ' . $node->title, 'print/' . $node->nid);
        $block['subject'] = t('Tools');
        $block['content'] = theme('item_list', array('items' => $items));
      }
      break;
  }
  
  return $block;
}


function crf_requests_create_form() {
  $form['links'] = array(
    '#type' => 'select',
    '#options' => array(
      'node/add/request' => 'Request',
    ),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Go',
  );
  return $form;
}


function crf_requests_create_form_submit($form, $form_state) {
  drupal_goto($form_state['values']['links']);
}


function crf_requests_admin_form() {
  $form['links'] = array(
    '#type' => 'select',
    '#options' => array(
      'node/add/cluster-objectives' => 'Create Cluster Objective',
      'node/add/contact' => 'Create Focal Point',
      'node/add/indicator-definition' => 'Create Indicator Definition',
      'admin/content' => 'Manage Content',
      'admin/structure/taxonomy/clusters' => 'Manage Clusters',
      'admin/structure/taxonomy/emergencies' => 'Manage Emergencies',
      'admin/structure/taxonomy/job_title' => 'Manage Job Titles',
      'admin/structure/taxonomy/locations' => 'Manage Locations',
      'admin/structure/taxonomy/organizations' => 'Manage Organisations',
      'admin/structure/taxonomy/reporting_types' => 'Manage Reporting types',
    ),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Go',
  );
  return $form;
}


function crf_requests_admin_form_submit($form, $form_state) {
  drupal_goto($form_state['values']['links']);
}


function crf_requests_view_data_form() {
  $form['links'] = array(
    '#type' => 'select',
    '#options' => array(
      'crf/cluster-content/hr_sitrep/Situation Report Information' => 'Situation Report Information',
      'crf/indicator-data/table' => 'Indicator Values',
      'crf/cluster-content/sectoral_analysis/Sectoral Analysis' => 'Sectoral Analysis',
      'taxonomy/term/all/contacts' => 'Contacts',
      'resources/assessment-registry' => 'Assessments',
    ),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Go',
  );
  return $form;
}

function crf_requests_view_data_form_submit($form, $form_state) {
  drupal_goto($form_state['values']['links']);
}


function crf_requests_convert_form_textfield($type, $machine_name = NULL) {
  $options = array('' => '- Any -');
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', $type)
    ->entityCondition('bundle', $machine_name)
    ->execute();
  if (!empty($result)) {
    foreach (array_keys($result[$type]) as $id) {
      if ($type == 'taxonomy_term') {
        $entity = taxonomy_term_load($id);
        $options[$id] = $entity->name;
      }
      else if ($type == 'node') {
        $entity = node_load($id);
        $options[$id] = $entity->title;
      }
    }
  }
  return array(
    '#type' => 'select',
    '#options' => $options,
    '#default_value' => '',
  );
}

